{"ast":null,"code":"var _jsxFileName = \"/Users/jacque/bookshelf/src/features/todoList/ToDoBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Header } from \"../textDisplay/Header\";\nimport { NewTask } from \"./NewTask\";\nimport { TaskList } from \"./TaskList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToDoBoard = () => {\n  _s();\n\n  const [newTask, setNewTask] = useState({});\n\n  const handleChange = ({\n    target\n  }) => {\n    const {\n      name,\n      value\n    } = target;\n    setNewTask(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  const [allTasks, setAllTasks] = useState([]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (newTask.title !== \"\") {\n      setAllTasks(prev => [newTask, ...prev]);\n      setNewTask({});\n    }\n  };\n\n  const handleDelete = taskToRemove => {\n    setAllTasks(prev => prev.filter(task => task.value !== taskToRemove.value));\n  };\n\n  const [completeTasks, setCompleteTasks] = useState([]);\n\n  const handleComplete = taskCompleted => {\n    setCompleteTasks(prev => [...prev, taskCompleted]);\n    alert(completeTasks.title);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"todoBoard\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTask, {\n      newTask: newTask,\n      handleChange: handleChange,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      allTasks: allTasks,\n      handleDelete: handleDelete,\n      handleComplete: handleComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You've Completed \", \" Tasks\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToDoBoard, \"XcIkzwCCKxM3betrdf1GOe174hY=\");\n\n_c = ToDoBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoBoard\");","map":{"version":3,"sources":["/Users/jacque/bookshelf/src/features/todoList/ToDoBoard.js"],"names":["React","useState","Header","NewTask","TaskList","ToDoBoard","newTask","setNewTask","handleChange","target","name","value","prev","allTasks","setAllTasks","handleSubmit","event","preventDefault","title","handleDelete","taskToRemove","filter","task","completeTasks","setCompleteTasks","handleComplete","taskCompleted","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,uBAAvB;AAEA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AACA,QAAMO,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACnC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,MAAxB;AACAF,IAAAA,UAAU,CAAEK,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAW,OAACF,IAAD,GAAQC;AAAnB,KAAX,CAAD,CAAV;AACD,GAHD;;AAKA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMc,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAIX,OAAO,CAACY,KAAR,KAAkB,EAAtB,EAA0B;AACxBJ,MAAAA,WAAW,CAAEF,IAAD,IAAU,CAACN,OAAD,EAAU,GAAGM,IAAb,CAAX,CAAX;AACAL,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GAPD;;AASA,QAAMY,YAAY,GAAIC,YAAD,IAAkB;AACrCN,IAAAA,WAAW,CAAEF,IAAD,IACVA,IAAI,CAACS,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACX,KAAL,KAAeS,YAAY,CAACT,KAAlD,CADS,CAAX;AAGD,GAJD;;AAMA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCvB,QAAQ,CAAC,EAAD,CAAlD;;AACA,QAAMwB,cAAc,GAAIC,aAAD,IAAmB;AACxCF,IAAAA,gBAAgB,CAAEZ,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUc,aAAV,CAAX,CAAhB;AACAC,IAAAA,KAAK,CAACJ,aAAa,CAACL,KAAf,CAAL;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,OAAD;AACE,MAAA,OAAO,EAAEZ,OADX;AAEE,MAAA,YAAY,EAAEE,YAFhB;AAGE,MAAA,YAAY,EAAEO;AAHhB;AAAA;AAAA;AAAA;AAAA,YAHF,eASE,QAAC,QAAD;AACE,MAAA,QAAQ,EAAEF,QADZ;AAEE,MAAA,YAAY,EAAEM,YAFhB;AAGE,MAAA,cAAc,EAAEM;AAHlB;AAAA;AAAA;AAAA;AAAA,YATF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA/CM;;GAAMpB,S;;KAAAA,S","sourcesContent":["import React, { useState } from \"react\";\nimport { Header } from \"../textDisplay/Header\";\n\nimport { NewTask } from \"./NewTask\";\nimport { TaskList } from \"./TaskList\";\n\nexport const ToDoBoard = () => {\n  const [newTask, setNewTask] = useState({});\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setNewTask((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const [allTasks, setAllTasks] = useState([]);\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (newTask.title !== \"\") {\n      setAllTasks((prev) => [newTask, ...prev]);\n      setNewTask({});\n    }\n  };\n\n  const handleDelete = (taskToRemove) => {\n    setAllTasks((prev) =>\n      prev.filter((task) => task.value !== taskToRemove.value)\n    );\n  };\n\n  const [completeTasks, setCompleteTasks] = useState([]);\n  const handleComplete = (taskCompleted) => {\n    setCompleteTasks((prev) => [...prev, taskCompleted]);\n    alert(completeTasks.title);\n  };\n\n  return (\n    <div id=\"todoBoard\">\n      <Header />\n\n      <NewTask\n        newTask={newTask}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n      />\n\n      <TaskList\n        allTasks={allTasks}\n        handleDelete={handleDelete}\n        handleComplete={handleComplete}\n      />\n      <p>You've Completed {} Tasks</p>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}