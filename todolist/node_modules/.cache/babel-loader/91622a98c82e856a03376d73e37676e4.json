{"ast":null,"code":"var _jsxFileName = \"/Users/jacque/bookshelf/src/features/randomColor/RandomColor.js\";\nimport React from \"react\";\nimport { Button } from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class RandomColor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: [200, 100, 120]\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.applyColor();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.applyColor();\n  }\n\n  chooseColor() {\n    const random = [];\n\n    for (let i = 0; i < 3; i++) {\n      random.push(Math.floor(Math.random() * 256));\n    }\n\n    return random;\n  }\n\n  formatColor(ary) {\n    return \"rgb(\" + ary.join(\",\") + \")\";\n  }\n\n  applyColor() {\n    const color = this.formatColor(this.state.color);\n    document.body.style.background = color;\n  }\n\n  handleClick() {\n    this.setState({\n      color: this.chooseColor()\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"randomColor\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jacque/bookshelf/src/features/randomColor/RandomColor.js"],"names":["React","Button","RandomColor","Component","constructor","props","state","color","handleClick","bind","componentDidMount","applyColor","componentDidUpdate","prevProps","prevState","chooseColor","random","i","push","Math","floor","formatColor","ary","join","document","body","style","background","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,OAAO,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX;AAAT,KAAb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL;AACD;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,SAAKH,UAAL;AACD;;AAEDI,EAAAA,WAAW,GAAG;AACZ,UAAMC,MAAM,GAAG,EAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BD,MAAAA,MAAM,CAACE,IAAP,CAAYC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACH,MAAL,KAAgB,GAA3B,CAAZ;AACD;;AACD,WAAOA,MAAP;AACD;;AAEDK,EAAAA,WAAW,CAACC,GAAD,EAAM;AACf,WAAO,SAASA,GAAG,CAACC,IAAJ,CAAS,GAAT,CAAT,GAAyB,GAAhC;AACD;;AAEDZ,EAAAA,UAAU,GAAG;AACX,UAAMJ,KAAK,GAAG,KAAKc,WAAL,CAAiB,KAAKf,KAAL,CAAWC,KAA5B,CAAd;AACAiB,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,UAApB,GAAiCpB,KAAjC;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,SAAKoB,QAAL,CAAc;AAAErB,MAAAA,KAAK,EAAE,KAAKQ,WAAL;AAAT,KAAd;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKrB;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA1C8C","sourcesContent":["import React from \"react\";\nimport { Button } from \"./Button\";\n\nexport class RandomColor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { color: [200, 100, 120] };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.applyColor();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    this.applyColor();\n  }\n\n  chooseColor() {\n    const random = [];\n    for (let i = 0; i < 3; i++) {\n      random.push(Math.floor(Math.random() * 256));\n    }\n    return random;\n  }\n\n  formatColor(ary) {\n    return \"rgb(\" + ary.join(\",\") + \")\";\n  }\n\n  applyColor() {\n    const color = this.formatColor(this.state.color);\n    document.body.style.background = color;\n  }\n\n  handleClick() {\n    this.setState({ color: this.chooseColor() });\n  }\n\n  render() {\n    return (\n      <div id=\"randomColor\">\n        <p> </p>\n        <Button onClick={this.handleClick} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}